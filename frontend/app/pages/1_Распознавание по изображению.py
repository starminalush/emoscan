import base64
from io import BytesIO
from loguru import logger
import streamlit as st
from PIL import Image
import requests


def __crop_face( bbox, image_file):
    image = Image.open(image_file)
    logger.error(bbox)
    return image.crop(bbox)


def __recognize(image_bytes):
    files = {"file": image_bytes}
    response = requests.post("http://backend:8000/recognize/", files=files)
    if response.status_code == 200:
        return response.json()
    return None


st.set_page_config(page_title="–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é", page_icon="üì∑")
image_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ", type=["png", "jpg", "jpeg"])

if image_file is not None:

    st.image(image_file, width=250)
    st.text("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ")
    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")
    with st.spinner('Wait for it...'):
        recognized_data = __recognize(image_bytes=image_file.read())
    if recognized_data:
        #–ø–æ–ª—É—á–∏–ª–∏ –±–æ–∫—Å—ã
        for res in recognized_data:
            st.image(
                __crop_face(res["bbox"], image_file),
                width=250,
            )
            st.text(res["emotion"])
    else:
        st.text("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ª–∏—Ü–æ –∏–ª–∏ —ç–º–æ—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª")
