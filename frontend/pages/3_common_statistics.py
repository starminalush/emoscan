from datetime import date, timedelta
from os import getenv

import pandas as pd
import plotly.graph_objects as go
import requests
import streamlit as st


def _get_analytics(start_date: date, end_date: date):
    result = requests.get(f"{getenv('BACKEND_URI')}/analytics?date_start={start_date}&date_end={end_date}").json()
    return result


st.set_page_config(page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç–º–æ—Ü–∏–π –ø–æ –¥–Ω—è–º", page_icon="üïí")


start_date = st.date_input("–ù–∞—á–∞–ª–æ:", date.today() - timedelta(days=7))
end_date = st.date_input("–ö–æ–Ω–µ—Ü:", date.today())

is_pressed = st.button("–ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É")
if is_pressed:
    with st.spinner("–°—á–∏—Ç–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É..."):
        result = _get_analytics(start_date, end_date)
        if result:
            df = pd.DataFrame(result)

            # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ª—é 'emotion'
            grouped_data = df.groupby("emotion")

            # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —ç–º–æ—Ü–∏–∏
            fig = go.Figure()

            for emotion, data in grouped_data:
                fig.add_trace(
                    go.Scatter(
                        x=data["datetime"],
                        y=data["count"],
                        mode="lines+markers",
                        name=emotion,
                    )
                )

            # –í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ Streamlit
            st.plotly_chart(fig)
        else:
            st.text("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥")
